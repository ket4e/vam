using System.Collections.Generic;
using UnityEngine;

namespace ZenFulcrum.EmbeddedBrowser;

internal static class KeyMappings
{
	private static Dictionary<KeyCode, int> mappings;

	private static Dictionary<int, KeyCode> reverseMappings;

	static KeyMappings()
	{
		mappings = new Dictionary<KeyCode, int>
		{
			{
				KeyCode.Escape,
				27
			},
			{
				KeyCode.F1,
				112
			},
			{
				KeyCode.F2,
				113
			},
			{
				KeyCode.F3,
				114
			},
			{
				KeyCode.F4,
				115
			},
			{
				KeyCode.F5,
				116
			},
			{
				KeyCode.F6,
				117
			},
			{
				KeyCode.F7,
				118
			},
			{
				KeyCode.F8,
				119
			},
			{
				KeyCode.F9,
				120
			},
			{
				KeyCode.F10,
				121
			},
			{
				KeyCode.F11,
				122
			},
			{
				KeyCode.F12,
				123
			},
			{
				KeyCode.SysReq,
				44
			},
			{
				KeyCode.Print,
				44
			},
			{
				KeyCode.ScrollLock,
				145
			},
			{
				KeyCode.Pause,
				19
			},
			{
				KeyCode.BackQuote,
				192
			},
			{
				KeyCode.Alpha0,
				48
			},
			{
				KeyCode.Alpha1,
				49
			},
			{
				KeyCode.Alpha2,
				50
			},
			{
				KeyCode.Alpha3,
				51
			},
			{
				KeyCode.Alpha4,
				52
			},
			{
				KeyCode.Alpha5,
				53
			},
			{
				KeyCode.Alpha6,
				54
			},
			{
				KeyCode.Alpha7,
				55
			},
			{
				KeyCode.Alpha8,
				56
			},
			{
				KeyCode.Alpha9,
				57
			},
			{
				KeyCode.Minus,
				189
			},
			{
				KeyCode.Equals,
				187
			},
			{
				KeyCode.Backspace,
				8
			},
			{
				KeyCode.Tab,
				9
			},
			{
				KeyCode.LeftBracket,
				219
			},
			{
				KeyCode.RightBracket,
				221
			},
			{
				KeyCode.Backslash,
				220
			},
			{
				KeyCode.CapsLock,
				20
			},
			{
				KeyCode.Semicolon,
				186
			},
			{
				KeyCode.Quote,
				222
			},
			{
				KeyCode.Return,
				13
			},
			{
				KeyCode.LeftShift,
				16
			},
			{
				KeyCode.Comma,
				188
			},
			{
				KeyCode.Period,
				190
			},
			{
				KeyCode.Slash,
				191
			},
			{
				KeyCode.RightShift,
				16
			},
			{
				KeyCode.LeftControl,
				17
			},
			{
				KeyCode.LeftCommand,
				91
			},
			{
				KeyCode.LeftWindows,
				91
			},
			{
				KeyCode.LeftAlt,
				18
			},
			{
				KeyCode.Space,
				32
			},
			{
				KeyCode.RightAlt,
				18
			},
			{
				KeyCode.RightCommand,
				92
			},
			{
				KeyCode.RightWindows,
				92
			},
			{
				KeyCode.Menu,
				93
			},
			{
				KeyCode.RightControl,
				17
			},
			{
				KeyCode.Insert,
				45
			},
			{
				KeyCode.Home,
				36
			},
			{
				KeyCode.PageUp,
				33
			},
			{
				KeyCode.Delete,
				46
			},
			{
				KeyCode.End,
				35
			},
			{
				KeyCode.PageDown,
				34
			},
			{
				KeyCode.UpArrow,
				38
			},
			{
				KeyCode.LeftArrow,
				37
			},
			{
				KeyCode.DownArrow,
				40
			},
			{
				KeyCode.RightArrow,
				39
			},
			{
				KeyCode.Numlock,
				144
			},
			{
				KeyCode.KeypadDivide,
				111
			},
			{
				KeyCode.KeypadMultiply,
				106
			},
			{
				KeyCode.KeypadMinus,
				109
			},
			{
				KeyCode.Keypad7,
				103
			},
			{
				KeyCode.Keypad8,
				104
			},
			{
				KeyCode.Keypad9,
				105
			},
			{
				KeyCode.KeypadPlus,
				107
			},
			{
				KeyCode.Keypad4,
				100
			},
			{
				KeyCode.Keypad5,
				101
			},
			{
				KeyCode.Keypad6,
				102
			},
			{
				KeyCode.Keypad1,
				97
			},
			{
				KeyCode.Keypad2,
				98
			},
			{
				KeyCode.Keypad3,
				99
			},
			{
				KeyCode.KeypadEnter,
				13
			},
			{
				KeyCode.Keypad0,
				96
			},
			{
				KeyCode.KeypadPeriod,
				110
			}
		};
		reverseMappings = new Dictionary<int, KeyCode>();
		foreach (KeyValuePair<KeyCode, int> mapping in mappings)
		{
			reverseMappings[mapping.Value] = mapping.Key;
		}
		for (int i = 97; i <= 122; i++)
		{
			KeyCode keyCode = (KeyCode)i;
			int num = i - 97 + 65;
			mappings[keyCode] = num;
			reverseMappings[num] = keyCode;
		}
	}

	public static int GetWindowsKeyCode(Event ev)
	{
		int keyCode = (int)ev.keyCode;
		if (keyCode == 0)
		{
			if (ev.character == '\n')
			{
				return 13;
			}
			return ev.character;
		}
		if (mappings.TryGetValue(ev.keyCode, out var value))
		{
			return value;
		}
		Debug.LogWarning("Unknown key mapping: " + ev);
		return keyCode;
	}

	public static KeyCode GetUnityKeyCode(int windowsKeyCode)
	{
		if (reverseMappings.TryGetValue(windowsKeyCode, out var value))
		{
			return value;
		}
		return KeyCode.None;
	}
}
